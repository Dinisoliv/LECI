// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.2 Build 922 07/20/2023 SC Lite Edition"

// DATE "12/19/2023 12:34:27"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module SpecialCount (
	OUT,
	CLK);
output 	[3:0] OUT;
input 	CLK;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \CLK~input_o ;
wire \OUT[3]~output_o ;
wire \OUT[2]~output_o ;
wire \OUT[1]~output_o ;
wire \OUT[0]~output_o ;


cycloneive_io_obuf \OUT[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUT[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \OUT[3]~output .bus_hold = "false";
defparam \OUT[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \OUT[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUT[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \OUT[2]~output .bus_hold = "false";
defparam \OUT[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \OUT[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUT[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \OUT[1]~output .bus_hold = "false";
defparam \OUT[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \OUT[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUT[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \OUT[0]~output .bus_hold = "false";
defparam \OUT[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

assign OUT[3] = \OUT[3]~output_o ;

assign OUT[2] = \OUT[2]~output_o ;

assign OUT[1] = \OUT[1]~output_o ;

assign OUT[0] = \OUT[0]~output_o ;

endmodule
